import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
// Import router
import { useRouter } from "next/router";
import LanguageSelect from "../components/LanguageSelect";
// Import cookie consent
import CookieConsent from "react-cookie-consent";

export default function Home({ data }) {
  // Get locale from NextJS router
  const { locale = "en" } = useRouter();

  // Get the page data
  const { page } = data;

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>{page?.title}</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <h1 className={styles.title}>{page?.title}</h1>

          <p className={styles.description}>
            Current locale: <code className={styles.code}>{locale}</code>
          </p>
          <LanguageSelect />
        </main>

        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{" "}
            <span className={styles.logo}>
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                width={72}
                height={16}
              />
            </span>
          </a>
        </footer>
      </div>
      <CookieConsent
        cookieName="hasCookieConsent"
        location="bottom"
        enableDeclineButton
      >
        This website uses cookies to enhance the user experience.
      </CookieConsent>
    </>
  );
}

export async function getStaticProps({ locale: nextLocale }) {
  // This is just mocking some data fetching from an API
  // You can get the locale from the getStaticProps and pass that into
  // your API as a param which is useful in my experience
  // const page = await yourClient.fetch(query, { locale: locale });

  const apiData = {
    en: {
      title: "English locale",
    },
    fr: {
      title: "Locale Français",
    },
    "en-gb": {
      title: "English - Great Britain locale",
    },
    "en-ca": {
      title: "English - Canada locale",
    },
    "fr-ca": {
      title: "Locale Français-Canada",
    },
    "fr-fr": {
      title: "Locale Français-France",
    },
    "fr-be": {
      title: "Locale Français-Belge",
    },
  };

  const locale = nextLocale === "default" ? "en" : nextLocale;

  const page = apiData[locale];

  if (!page) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      data: { page },
    },
  };
}
